use revm::interpreter::{
    instructions::{
        arithmetic, bitwise, control,
        memory, stack, system, host_env,
        host
    },
    primitives::Spec,
    Host, InstructionResult, Interpreter,
};
    
use crate::check_instruction_result;
pub fn call<const CHECKED: bool, SPEC: Spec>(interpreter: &mut Interpreter, host: &mut dyn Host) {
    let mut jump: usize = 0;
    
    loop {
        match jump {
            0 => {
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                system::callvalue(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0x10]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11;
                }
            }
            11 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                control::revert::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                return;
                jump = 16;
            }
            16 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                system::calldatasize(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0x4c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 25;
                }
            }
            25 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::calldataload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                bitwise::shr::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x30, 0x62, 0x7b, 0x7c]);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0x51]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 42;
                }
            }
            42 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x75, 0xac, 0x89, 0x2a]);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0x85]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 53;
                }
            }
            53 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x78, 0x4f, 0x13, 0x66]);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x1d]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 64;
                }
            }
            64 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xc2, 0x94, 0x36, 0x01]);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x46]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 75;
                }
            }
            75 => {
                jump = 76;
            }
            76 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                control::revert::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                return;
                jump = 81;
            }
            81 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0x59]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x63]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            88 => {
                jump = 89;
            }
            89 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                control::ret(interpreter, host);
                check_instruction_result!(interpreter);
                return;
                jump = 133;
            }
            133 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0xa8]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldatasize(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0x9b]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 150;
                }
            }
            150 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                control::revert::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                return;
                jump = 155;
            }
            155 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldataload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldataload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0xd1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            167 => {
                jump = 168;
            }
            168 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                jump = 202;
            }
            202 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0xe2]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 210;
                }
            }
            210 => {
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0xca]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            225 => {
                jump = 226;
            }
            226 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x0f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 245;
                }
            }
            245 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::exp::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 271;
            }
            271 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                control::ret(interpreter, host);
                check_instruction_result!(interpreter);
                return;
                jump = 285;
            }
            285 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0x59]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldatasize(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x33]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 302;
                }
            }
            302 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                control::revert::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                return;
                jump = 307;
            }
            307 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldataload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldataload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldataload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x5b]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            325 => {
                jump = 326;
            }
            326 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x00, 0xa8]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldatasize(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x5c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 343;
                }
            }
            343 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                control::revert::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                return;
                jump = 348;
            }
            348 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                system::calldataload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x90]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            354 => {
                jump = 355;
            }
            355 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x76]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x04, 0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x34]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            373 => {
                jump = 374;
            }
            374 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x07, 0xd5, 0xdc]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x93]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 401;
                }
            }
            401 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 403;
            }
            403 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x25]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            525 => {
                jump = 526;
            }
            526 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            530 => {
                jump = 531;
            }
            531 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x07, 0xd5, 0xdc]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            539 => {
                jump = 540;
            }
            540 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x1e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            548 => {
                jump = 549;
            }
            549 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x41]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            576 => {
                jump = 577;
            }
            577 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x5a]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x80]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            596 => {
                jump = 597;
            }
            597 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x12]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            601 => {
                jump = 602;
            }
            602 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x70]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x45]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            623 => {
                jump = 624;
            }
            624 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x84]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            643 => {
                jump = 644;
            }
            644 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x9a]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0a]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            665 => {
                jump = 666;
            }
            666 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0xa7]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x1e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            678 => {
                jump = 679;
            }
            679 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0xb1]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x50]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            688 => {
                jump = 689;
            }
            689 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            720 => {
                jump = 721;
            }
            721 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                jump = 726;
            }
            726 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x04, 0xc9]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 736;
                }
            }
            736 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0xed]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            748 => {
                jump = 749;
            }
            749 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3e]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0x2a]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 778;
                }
            }
            778 => {
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0x1c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 792;
                }
            }
            792 => {
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 796;
            }
            796 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0x42]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            809 => {
                jump = 810;
            }
            810 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x41]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 834;
            }
            834 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0x68]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 851;
                }
            }
            851 => {
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 872;
            }
            872 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::exp::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3e]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xc5]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 933;
                }
            }
            933 => {
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xb7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 947;
                }
            }
            947 => {
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 951;
            }
            951 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            964 => {
                jump = 965;
            }
            965 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x41]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 989;
            }
            989 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x04, 0x03]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1006;
                }
            }
            1006 => {
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1027;
            }
            1027 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::exp::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3e]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x04, 0x60]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1088;
                }
            }
            1088 => {
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x04, 0x52]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1102;
                }
            }
            1102 => {
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1106;
            }
            1106 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x04, 0x78]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1119 => {
                jump = 1120;
            }
            1120 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x41]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1144;
            }
            1144 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x04, 0x9e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1161;
                }
            }
            1161 => {
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1182;
            }
            1182 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::exp::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0xd6]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1224 => {
                jump = 1225;
            }
            1225 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x4d]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1286;
                }
            }
            1286 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x22]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1294;
                }
            }
            1294 => {
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x4d]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1313 => {
                jump = 1314;
            }
            1314 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1328;
            }
            1328 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x30]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1347;
                }
            }
            1347 => {
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1357;
            }
            1357 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1365;
            }
            1365 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1370 => {
                jump = 1371;
            }
            1371 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x6c]);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1387 => {
                jump = 1388;
            }
            1388 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1423 => {
                jump = 1424;
            }
            1424 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1435;
            }
            1435 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x07, 0xa3]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1443;
                }
            }
            1443 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                jump = 1446;
            }
            1446 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x07, 0x99]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1456;
                }
            }
            1456 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0xbd]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1468 => {
                jump = 1469;
            }
            1469 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3e]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0xfa]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1498;
                }
            }
            1498 => {
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0xec]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1512;
                }
            }
            1512 => {
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1516;
            }
            1516 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x06, 0x12]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1529 => {
                jump = 1530;
            }
            1530 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x41]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1554;
            }
            1554 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x06, 0x38]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1571;
                }
            }
            1571 => {
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1592;
            }
            1592 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::exp::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3e]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x06, 0x95]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1653;
                }
            }
            1653 => {
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x06, 0x87]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1667;
                }
            }
            1667 => {
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1671;
            }
            1671 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x06, 0xad]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1684 => {
                jump = 1685;
            }
            1685 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x41]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1709;
            }
            1709 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x06, 0xd3]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1726;
                }
            }
            1726 => {
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1747;
            }
            1747 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::exp::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x3e]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x07, 0x30]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1808;
                }
            }
            1808 => {
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x07, 0x22]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1822;
                }
            }
            1822 => {
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1826;
            }
            1826 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x07, 0x48]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1839 => {
                jump = 1840;
            }
            1840 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x41]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1864;
            }
            1864 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x07, 0x6e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 1881;
                }
            }
            1881 => {
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 1902;
            }
            1902 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::exp::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xf8]);
                check_instruction_result!(interpreter);
                bitwise::shl::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0xa6]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1944 => {
                jump = 1945;
            }
            1945 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x9b]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            1954 => {
                jump = 1955;
            }
            1955 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x27]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 2016;
                }
            }
            2016 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x07, 0xfc]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 2024;
                }
            }
            2024 => {
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x27]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            2043 => {
                jump = 2044;
            }
            2044 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 2058;
            }
            2058 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x0a]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 2077;
                }
            }
            2077 => {
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 2087;
            }
            2087 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 2095;
            }
            2095 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            2099 => {
                jump = 2100;
            }
            2100 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xfa, 0xf0, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x19, 0x75, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x11, 0x9e, 0x7f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0xa4]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0xa6, 0x73]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x3f]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            2211 => {
                jump = 2212;
            }
            2212 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x07, 0xd5, 0xdc]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x09, 0x1c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 2330;
                }
            }
            2330 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 2332;
            }
            2332 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x09, 0x97]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            2454 => {
                jump = 2455;
            }
            2455 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x76, 0xe8, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x86, 0x2a, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0x6e, 0x8f, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xdd, 0x1e, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x03, 0xd0, 0x90]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x68]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x69]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x6a]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x6b]);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x6c]);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x6d]);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x6e]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x6f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x70]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x71]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<32>(interpreter, host, &[0x31, 0xec, 0xc2, 0x1a, 0x74, 0x5e, 0x39, 0x68, 0xa0, 0x4e, 0x95, 0x70, 0xe4, 0x42, 0x5b, 0xc1, 0x8f, 0xa8, 0x01, 0x9c, 0x68, 0x02, 0x81, 0x96, 0xb5, 0x46, 0xd1, 0x66, 0x9c, 0x20, 0x0c, 0x72]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x0c, 0x10]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 3086;
                }
            }
            3086 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 3088;
            }
            3088 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x76, 0xe8, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x42, 0x90, 0x49, 0x3f]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0x6e, 0x8f, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xdd, 0x1e, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x03, 0xd0, 0x90]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x03, 0xd0, 0x90]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x0c, 0xb6]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 3252;
                }
            }
            3252 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 3254;
            }
            3254 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x0d, 0x58]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 3414;
                }
            }
            3414 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 3416;
            }
            3416 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x76, 0xe8, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xfa, 0xf0, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0x6e, 0x8f, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x76, 0xe8, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x0d, 0xfd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 3579;
                }
            }
            3579 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 3581;
            }
            3581 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x0e, 0x9f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 3741;
                }
            }
            3741 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 3743;
            }
            3743 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x76, 0xe8, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xfa, 0xf0, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0x6e, 0x8f, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x3e, 0x54, 0xe9, 0x7f]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x0f, 0x3f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 3901;
                }
            }
            3901 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 3903;
            }
            3903 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x0f, 0xe1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 4063;
                }
            }
            4063 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 4065;
            }
            4065 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x76, 0xe8, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xfa, 0xf0, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x76, 0xe8, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xdd, 0x1e, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x10, 0x86]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 4228;
                }
            }
            4228 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 4230;
            }
            4230 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x11, 0x28]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 4390;
                }
            }
            4390 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 4392;
            }
            4392 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x48, 0x76, 0xe8, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xfa, 0xf0, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x17, 0x43, 0x99, 0xc9, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xdd, 0x1e, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x11, 0xce]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 4556;
                }
            }
            4556 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 4558;
            }
            4558 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x12, 0x70]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 4718;
                }
            }
            4718 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 4720;
            }
            4720 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0xfb, 0xc5, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x9b, 0xfc, 0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0xfb, 0xc5, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xcd, 0x29, 0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x13, 0x11]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 4879;
                }
            }
            4879 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 4881;
            }
            4881 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x13, 0xb3]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 5041;
                }
            }
            5041 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 5043;
            }
            5043 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x23, 0xc3, 0x46, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xfa, 0xf0, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x28, 0x9c, 0x45, 0x50]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xdd, 0x1e, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0xb7, 0x1b, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0xb7, 0x1b, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0xb7, 0x1b, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x14, 0x56]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 5204;
                }
            }
            5204 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 5206;
            }
            5206 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x14, 0xf8]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 5366;
                }
            }
            5366 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 5368;
            }
            5368 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x5e, 0x1f, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0xa1, 0xf4, 0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xf3, 0x4f, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x16, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 5642;
                }
            }
            5642 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 5644;
            }
            5644 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x16, 0xfd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 5883;
                }
            }
            5883 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 5885;
            }
            5885 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x5e, 0x1f, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0xa1, 0xf4, 0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x18, 0x0e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 6156;
                }
            }
            6156 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 6158;
            }
            6158 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x18, 0xff]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 6397;
                }
            }
            6397 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 6399;
            }
            6399 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0x55, 0xa9, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xf3, 0x4f, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0xa1, 0xf4, 0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x1a, 0x13]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 6673;
                }
            }
            6673 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 6675;
            }
            6675 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x1b, 0x04]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 6914;
                }
            }
            6914 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 6916;
            }
            6916 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0x55, 0xa9, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0xa1, 0xf4, 0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x1c, 0x15]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 7187;
                }
            }
            7187 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 7189;
            }
            7189 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x1d, 0x06]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 7428;
                }
            }
            7428 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 7430;
            }
            7430 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x5e, 0x1f, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xf3, 0x4f, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0xaa, 0x6a, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x1e, 0x1a]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 7704;
                }
            }
            7704 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 7706;
            }
            7706 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x1f, 0x0b]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 7945;
                }
            }
            7945 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 7947;
            }
            7947 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x5e, 0x1f, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0xaa, 0x6a, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x20, 0x1c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 8218;
                }
            }
            8218 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 8220;
            }
            8220 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x21, 0x0d]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 8459;
                }
            }
            8459 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 8461;
            }
            8461 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0x55, 0xa9, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0xaa, 0x6a, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x02, 0xf3, 0x4f, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x22, 0x21]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 8735;
                }
            }
            8735 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 8737;
            }
            8737 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x23, 0x12]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 8976;
                }
            }
            8976 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 8978;
            }
            8978 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0x55, 0xa9, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0xaa, 0x6a, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x24, 0x23]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 9249;
                }
            }
            9249 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 9251;
            }
            9251 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x25, 0x14]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 9490;
                }
            }
            9490 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 9492;
            }
            9492 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x5e, 0x1f, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0xaa, 0x6a, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0x55, 0xa9, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x26, 0x28]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 9766;
                }
            }
            9766 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 9768;
            }
            9768 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x27, 0x19]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 10007;
                }
            }
            10007 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 10009;
            }
            10009 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x5e, 0x1f, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0x55, 0xa9, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x88, 0xc2, 0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0xa1, 0xf4, 0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x28, 0x2d]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 10283;
                }
            }
            10283 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 10285;
            }
            10285 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x29, 0x1e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 10524;
                }
            }
            10524 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 10526;
            }
            10526 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x5e, 0x1f, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0x55, 0xa9, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0xaa, 0x6a, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2a, 0x32]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 10800;
                }
            }
            10800 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 10802;
            }
            10802 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2b, 0x23]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11041;
                }
            }
            11041 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 11043;
            }
            11043 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x03, 0x5e, 0x1f, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0x59, 0xe4, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0xa1, 0xf4, 0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x05, 0x55, 0xa9, 0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x01, 0x6a, 0x8c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x04, 0xa6, 0x2f, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x3e, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2c, 0x37]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11317;
                }
            }
            11317 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 11319;
            }
            11319 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2d, 0x28]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11558;
                }
            }
            11558 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 11560;
            }
            11560 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                jump = 11570;
            }
            11570 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xf2]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11580;
                }
            }
            11580 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2d, 0x4b]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11593;
                }
            }
            11593 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 11595;
            }
            11595 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0x6c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11882;
                }
            }
            11882 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 11884;
            }
            11884 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0x77]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11893;
                }
            }
            11893 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 11895;
            }
            11895 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xac]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0x95]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            11924 => {
                jump = 11925;
            }
            11925 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xa7]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            11942 => {
                jump = 11943;
            }
            11943 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            11947 => {
                jump = 11948;
            }
            11948 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xb9]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 11959;
                }
            }
            11959 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 11961;
            }
            11961 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2d, 0x32]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12017 => {
                jump = 12018;
            }
            12018 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12022 => {
                jump = 12023;
            }
            12023 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xff]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12030 => {
                jump = 12031;
            }
            12031 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12131 => {
                jump = 12132;
            }
            12132 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0x6c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12139 => {
                jump = 12140;
            }
            12140 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0x92]);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12177 => {
                jump = 12178;
            }
            12178 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xb1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12207;
                }
            }
            12207 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12209;
            }
            12209 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xc9]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12231;
                }
            }
            12231 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12233;
            }
            12233 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xe1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12255;
                }
            }
            12255 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12257;
            }
            12257 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12266 => {
                jump = 12267;
            }
            12267 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xf3]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12274 => {
                jump = 12275;
            }
            12275 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12317 => {
                jump = 12318;
            }
            12318 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x26]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12325 => {
                jump = 12326;
            }
            12326 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x3e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12348;
                }
            }
            12348 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12350;
            }
            12350 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x51]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12367;
                }
            }
            12367 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12369;
            }
            12369 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xe1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12386;
                }
            }
            12386 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12388;
            }
            12388 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x6c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12395 => {
                jump = 12396;
            }
            12396 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x93]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12434 => {
                jump = 12435;
            }
            12435 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                jump = 12440;
            }
            12440 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0xf1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12448;
                }
            }
            12448 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0x72]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0x4c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0x15]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x07, 0xa1, 0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x07, 0xa1, 0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0xec]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x43]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12523 => {
                jump = 12524;
            }
            12524 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0xf9]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12535;
                }
            }
            12535 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12537;
            }
            12537 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<14>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0x0e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 12556;
                }
            }
            12556 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12558;
            }
            12558 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12564 => {
                jump = 12565;
            }
            12565 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x07, 0xa1, 0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0xec]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x43]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12619 => {
                jump = 12620;
            }
            12620 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x12]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12657 => {
                jump = 12658;
            }
            12658 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0xae]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x8c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12717 => {
                jump = 12718;
            }
            12718 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0xbc]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0x64]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12731 => {
                jump = 12732;
            }
            12732 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0xe5]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x31, 0xdf]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x6c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12766 => {
                jump = 12767;
            }
            12767 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x1e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12772 => {
                jump = 12773;
            }
            12773 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x98]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12784 => {
                jump = 12785;
            }
            12785 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x08]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x53]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12800 => {
                jump = 12801;
            }
            12801 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12807 => {
                jump = 12808;
            }
            12808 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 12811;
            }
            12811 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12817 => {
                jump = 12818;
            }
            12818 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x1a]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12825 => {
                jump = 12826;
            }
            12826 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12879 => {
                jump = 12880;
            }
            12880 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x66]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xfe]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12901 => {
                jump = 12902;
            }
            12902 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xbf]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0x45]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            12990 => {
                jump = 12991;
            }
            12991 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcb]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0x66]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13002 => {
                jump = 13003;
            }
            13003 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13004 => {
                jump = 13005;
            }
            13005 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xd5]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13012 => {
                jump = 13013;
            }
            13013 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13067 => {
                jump = 13068;
            }
            13068 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13077;
            }
            13077 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x3d]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13085;
                }
            }
            13085 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x2c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13098;
                }
            }
            13098 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13100;
            }
            13100 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x35]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13107;
                }
            }
            13107 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13109;
            }
            13109 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x15]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13116 => {
                jump = 13117;
            }
            13117 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13122 => {
                jump = 13123;
            }
            13123 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0x41, 0xc6, 0x4e, 0x6d]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x39]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitor(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13163 => {
                jump = 13164;
            }
            13164 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x74]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13171 => {
                jump = 13172;
            }
            13172 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0xa6]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13185;
                }
            }
            13185 => {
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x2f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13221 => {
                jump = 13222;
            }
            13222 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0xb4]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x9f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13235 => {
                jump = 13236;
            }
            13236 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0xe8]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13248;
                }
            }
            13248 => {
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x2f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13287 => {
                jump = 13288;
            }
            13288 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0xf0]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0x87]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13295 => {
                jump = 13296;
            }
            13296 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0xf8]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0xc7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13303 => {
                jump = 13304;
            }
            13304 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x34, 0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13311 => {
                jump = 13312;
            }
            13312 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x34, 0x08]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13319 => {
                jump = 13320;
            }
            13320 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x34, 0x16]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13332;
                }
            }
            13332 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13334;
            }
            13334 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x35, 0x05]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13340;
                }
            }
            13340 => {
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x34, 0x29]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13351;
                }
            }
            13351 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13353;
            }
            13353 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x34, 0xe1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13535;
                }
            }
            13535 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13537;
            }
            13537 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x34, 0xec]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13546;
                }
            }
            13546 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13548;
            }
            13548 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0x53]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            13572 => {
                jump = 13573;
            }
            13573 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x35, 0x12]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13584;
                }
            }
            13584 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13586;
            }
            13586 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0x33]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13873;
                }
            }
            13873 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13875;
            }
            13875 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0x3e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13884;
                }
            }
            13884 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13886;
            }
            13886 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13907;
            }
            13907 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0x69]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13922;
                }
            }
            13922 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13929;
            }
            13929 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0x7c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13941;
                }
            }
            13941 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13948;
            }
            13948 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0x8f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13960;
                }
            }
            13960 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 13967;
            }
            13967 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 13988;
                }
            }
            13988 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0xb1]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x43]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14000 => {
                jump = 14001;
            }
            14001 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0xbe]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14012;
                }
            }
            14012 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14014;
            }
            14014 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0xe8]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14027;
                }
            }
            14027 => {
                stack::push_slice::<2>(interpreter, host, &[0x36, 0xe1]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0xdb]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14042 => {
                jump = 14043;
            }
            14043 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x1e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14048 => {
                jump = 14049;
            }
            14049 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14055 => {
                jump = 14056;
            }
            14056 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x2f]);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14070 => {
                jump = 14071;
            }
            14071 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x36, 0xff]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14078 => {
                jump = 14079;
            }
            14079 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x0d]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14091;
                }
            }
            14091 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14093;
            }
            14093 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x25]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14099;
                }
            }
            14099 => {
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x1e]);
                check_instruction_result!(interpreter);
                stack::dup::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x57]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14109 => {
                jump = 14110;
            }
            14110 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x33]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14116 => {
                jump = 14117;
            }
            14117 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x30]);
                check_instruction_result!(interpreter);
                stack::dup::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xec]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14127 => {
                jump = 14128;
            }
            14128 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14131;
            }
            14131 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x44]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0xaa]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14147 => {
                jump = 14148;
            }
            14148 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14162 => {
                jump = 14163;
            }
            14163 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x5b]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14170 => {
                jump = 14171;
            }
            14171 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x73]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0xe8]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14194 => {
                jump = 14195;
            }
            14195 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x85]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0xe8]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14212 => {
                jump = 14213;
            }
            14213 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x97]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0xe8]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14230 => {
                jump = 14231;
            }
            14231 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14238 => {
                jump = 14239;
            }
            14239 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14248;
            }
            14248 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0xc2]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14258;
                }
            }
            14258 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0x90]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0xc4]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14274;
                }
            }
            14274 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14276;
            }
            14276 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0x7c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14458;
                }
            }
            14458 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14460;
            }
            14460 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0x87]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14469;
                }
            }
            14469 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14471;
            }
            14471 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x13]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14479 => {
                jump = 14480;
            }
            14480 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0xa9]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14492;
                }
            }
            14492 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0xa9]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14500;
                }
            }
            14500 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14505;
            }
            14505 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0xb9]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14510;
                }
            }
            14510 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14521;
            }
            14521 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0xa8]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14529 => {
                jump = 14530;
            }
            14530 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                jump = 14534;
            }
            14534 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x49]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14544;
                }
            }
            14544 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x17]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0xe2]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14560;
                }
            }
            14560 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14562;
            }
            14562 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xc0]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x03]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14849;
                }
            }
            14849 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14851;
            }
            14851 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x0e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14860;
                }
            }
            14860 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14862;
            }
            14862 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0xbb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14870 => {
                jump = 14871;
            }
            14871 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x30]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14883;
                }
            }
            14883 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x30]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14891;
                }
            }
            14891 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14896;
            }
            14896 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x40]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 14901;
                }
            }
            14901 => {
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 14912;
            }
            14912 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x38, 0xc6]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14920 => {
                jump = 14921;
            }
            14921 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14934 => {
                jump = 14935;
            }
            14935 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x5f]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14942 => {
                jump = 14943;
            }
            14943 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x7a]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14969 => {
                jump = 14970;
            }
            14970 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0x8f]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            14990 => {
                jump = 14991;
            }
            14991 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xa3]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15009;
                }
            }
            15009 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15011;
            }
            15011 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::eq(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xe1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15017;
                }
            }
            15017 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xb9]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15032 => {
                jump = 15033;
            }
            15033 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15038;
                }
            }
            15038 => {
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xca]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15049 => {
                jump = 15050;
            }
            15050 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15053;
            }
            15053 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xd8]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x31]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15063 => {
                jump = 15064;
            }
            15064 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x0b]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15072 => {
                jump = 15073;
            }
            15073 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xd8]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xc1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15083 => {
                jump = 15084;
            }
            15084 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3a, 0xf4]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15091 => {
                jump = 15092;
            }
            15092 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15118 => {
                jump = 15119;
            }
            15119 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0a, 0x2c, 0x2a]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0x27]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15137;
                }
            }
            15137 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x16, 0xe3, 0x60]);
                check_instruction_result!(interpreter);
                jump = 15143;
            }
            15143 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0x3f]);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15166 => {
                jump = 15167;
            }
            15167 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0x46]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15172;
                }
            }
            15172 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15174;
            }
            15174 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0x55]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15185;
                }
            }
            15185 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15189;
            }
            15189 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0xe8, 0xd4, 0xa5, 0x10, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0x8c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15218;
                }
            }
            15218 => {
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0x81]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xc1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15232 => {
                jump = 15233;
            }
            15233 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x0b]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15243 => {
                jump = 15244;
            }
            15244 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0x9e]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0x39]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15261 => {
                jump = 15262;
            }
            15262 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15273 => {
                jump = 15274;
            }
            15274 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0xb2]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15281 => {
                jump = 15282;
            }
            15282 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15335 => {
                jump = 15336;
            }
            15336 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3b, 0xfa]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15346;
                }
            }
            15346 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x2f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15353 => {
                jump = 15354;
            }
            15354 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x0f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15365;
                }
            }
            15365 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x2f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15374 => {
                jump = 15375;
            }
            15375 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15378 => {
                jump = 15379;
            }
            15379 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x28]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15399 => {
                jump = 15400;
            }
            15400 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x3e]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15421 => {
                jump = 15422;
            }
            15422 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x45]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15427;
                }
            }
            15427 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15429;
            }
            15429 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x5b]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15450 => {
                jump = 15451;
            }
            15451 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x77]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15467;
                }
            }
            15467 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x55]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15478 => {
                jump = 15479;
            }
            15479 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x80]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15487 => {
                jump = 15488;
            }
            15488 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xe8]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x99]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15502;
                }
            }
            15502 => {
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x55]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15512 => {
                jump = 15513;
            }
            15513 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xe8]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0xaf]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15525;
                }
            }
            15525 => {
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x55]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15534 => {
                jump = 15535;
            }
            15535 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15546 => {
                jump = 15547;
            }
            15547 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0xd0]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15567 => {
                jump = 15568;
            }
            15568 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0xe6]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15589 => {
                jump = 15590;
            }
            15590 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0xf8]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15607 => {
                jump = 15608;
            }
            15608 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15625 => {
                jump = 15626;
            }
            15626 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x11]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15631;
                }
            }
            15631 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15633;
            }
            15633 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xe7]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x27]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15648;
                }
            }
            15648 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xe8]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15655;
            }
            15655 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x39]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15660;
                }
            }
            15660 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x55]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15672 => {
                jump = 15673;
            }
            15673 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x49]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15688 => {
                jump = 15689;
            }
            15689 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x58]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15703 => {
                jump = 15704;
            }
            15704 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x5f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15709;
                }
            }
            15709 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15711;
            }
            15711 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x73]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15723;
                }
            }
            15723 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15731;
            }
            15731 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x87]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15736;
                }
            }
            15736 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x55]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15750 => {
                jump = 15751;
            }
            15751 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0x93]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15762 => {
                jump = 15763;
            }
            15763 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0xa6]);
                check_instruction_result!(interpreter);
                stack::dup::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15781 => {
                jump = 15782;
            }
            15782 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0xad]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15787;
                }
            }
            15787 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15789;
            }
            15789 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0xc3]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15801;
                }
            }
            15801 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15811;
            }
            15811 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0xd9]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15816;
                }
            }
            15816 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x55]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15832 => {
                jump = 15833;
            }
            15833 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0xe6]);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15845 => {
                jump = 15846;
            }
            15846 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3d, 0xed]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15851;
                }
            }
            15851 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15853;
            }
            15853 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xe8]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x37, 0x44]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15866;
                }
            }
            15866 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x05, 0x55]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15883 => {
                jump = 15884;
            }
            15884 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15920 => {
                jump = 15921;
            }
            15921 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x39]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15928 => {
                jump = 15929;
            }
            15929 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x48]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x43]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15943 => {
                jump = 15944;
            }
            15944 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x55]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15955;
                }
            }
            15955 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15957;
            }
            15957 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x5f, 0xdf, 0xb0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x68]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 15974;
                }
            }
            15974 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 15976;
            }
            15976 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x79]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x43]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            15992 => {
                jump = 15993;
            }
            15993 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x86]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16004;
                }
            }
            16004 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 16006;
            }
            16006 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x9a]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16025 => {
                jump = 16026;
            }
            16026 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xe8]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0xa8]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16039 => {
                jump = 16040;
            }
            16040 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x01, 0x86, 0xa0]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0xb9]);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x16]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16056 => {
                jump = 16057;
            }
            16057 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0xe6]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16063;
                }
            }
            16063 => {
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x09]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16101 => {
                jump = 16102;
            }
            16102 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 16137;
            }
            16137 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x16]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16149 => {
                jump = 16150;
            }
            16150 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x27]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2e, 0xf7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16166 => {
                jump = 16167;
            }
            16167 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x7f]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x64]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x52]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x44]);
                check_instruction_result!(interpreter);
                stack::dup::<13>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x2e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16195 => {
                jump = 16196;
            }
            16196 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x4c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16202;
                }
            }
            16202 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 16204;
            }
            16204 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16209 => {
                jump = 16210;
            }
            16210 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x44]);
                check_instruction_result!(interpreter);
                stack::dup::<14>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x4e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16227 => {
                jump = 16228;
            }
            16228 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x76]);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16245 => {
                jump = 16246;
            }
            16246 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x03, 0xe8]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16254 => {
                jump = 16255;
            }
            16255 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xb4]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x6c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16307 => {
                jump = 16308;
            }
            16308 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16320 => {
                jump = 16321;
            }
            16321 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xc9]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16328 => {
                jump = 16329;
            }
            16329 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xfb]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xf6]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xec]);
                check_instruction_result!(interpreter);
                stack::dup::<10>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<13>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16363 => {
                jump = 16364;
            }
            16364 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0x4c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16372;
                }
            }
            16372 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 16374;
            }
            16374 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0xcd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16378 => {
                jump = 16379;
            }
            16379 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0x30]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x6c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16431 => {
                jump = 16432;
            }
            16432 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16440 => {
                jump = 16441;
            }
            16441 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0x41]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16448 => {
                jump = 16449;
            }
            16449 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0x53]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16463;
                }
            }
            16463 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                jump = 16467;
            }
            16467 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0x89]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x0e]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x1c]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0x6c]);
                check_instruction_result!(interpreter);
                stack::dup::<13>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16491 => {
                jump = 16492;
            }
            16492 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xf6]);
                check_instruction_result!(interpreter);
                stack::dup::<12>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0x79]);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16504 => {
                jump = 16505;
            }
            16505 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<13>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<15>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16520 => {
                jump = 16521;
            }
            16521 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0xba]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16540;
                }
            }
            16540 => {
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0xaa]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3e, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16553 => {
                jump = 16554;
            }
            16554 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x40, 0xb1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16559;
                }
            }
            16559 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 16561;
            }
            16561 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 16570;
            }
            16570 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<11>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x9c, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<13>(interpreter, host, &[0x0c, 0x9f, 0x2c, 0x9c, 0xd0, 0x46, 0x74, 0xed, 0xea, 0x40, 0x00, 0x00, 0x00]);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0e, 0xa6, 0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x5e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16616;
                }
            }
            16616 => {
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x2a]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x1f]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<14>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<15>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<15>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x6c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16670 => {
                jump = 16671;
            }
            16671 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16681 => {
                jump = 16682;
            }
            16682 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x44]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x02, 0x55]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x3e]);
                check_instruction_result!(interpreter);
                stack::dup::<15>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<15>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<15>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xc1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16701 => {
                jump = 16702;
            }
            16702 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16707 => {
                jump = 16708;
            }
            16708 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x53]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x1e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16722 => {
                jump = 16723;
            }
            16723 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16733 => {
                jump = 16734;
            }
            16734 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x03, 0xd0, 0x90]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x73]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x43]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16754 => {
                jump = 16755;
            }
            16755 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x80]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16766;
                }
            }
            16766 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 16768;
            }
            16768 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<4>(interpreter, host, &[0xff, 0xff, 0xff, 0xff]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0xb2]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16781;
                }
            }
            16781 => {
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x53]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0xa4]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0x9e]);
                check_instruction_result!(interpreter);
                stack::dup::<14>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<14>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<14>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3f, 0xc1]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16797 => {
                jump = 16798;
            }
            16798 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16803 => {
                jump = 16804;
            }
            16804 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x03, 0xd0, 0x90]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x1e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16817 => {
                jump = 16818;
            }
            16818 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x05]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0xf7]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x41, 0xec]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x80]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<15>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<16>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<16>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x6c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16875 => {
                jump = 16876;
            }
            16876 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x2f, 0xeb]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16886 => {
                jump = 16887;
            }
            16887 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0b, 0x71, 0xb0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x30, 0x1e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16900 => {
                jump = 16901;
            }
            16901 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 16908;
            }
            16908 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16917 => {
                jump = 16918;
            }
            16918 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x27]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16928;
                }
            }
            16928 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x08, 0x2f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16934 => {
                jump = 16935;
            }
            16935 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16941 => {
                jump = 16942;
            }
            16942 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x3a]);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x4e]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16953 => {
                jump = 16954;
            }
            16954 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x32, 0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0xe8, 0xd4, 0xa5, 0x10, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x33, 0x0c]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16973 => {
                jump = 16974;
            }
            16974 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                jump = 16977;
            }
            16977 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x67]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 16986;
                }
            }
            16986 => {
                stack::push_slice::<3>(interpreter, host, &[0x5f, 0xdf, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x51]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            16998 => {
                jump = 16999;
            }
            16999 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 17000;
            }
            17000 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x5f, 0xdf, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x7f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17010;
                }
            }
            17010 => {
                stack::push_slice::<3>(interpreter, host, &[0x5f, 0xdf, 0xb0]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x68]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17022 => {
                jump = 17023;
            }
            17023 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                jump = 17030;
            }
            17030 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::sgt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xd4]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17038;
                }
            }
            17038 => {
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<4>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x99]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17047;
                }
            }
            17047 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 17049;
            }
            17049 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<3>(interpreter, host, &[0x0f, 0x42, 0x40]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<8>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<9>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<7>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xaf]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17069;
                }
            }
            17069 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 17071;
            }
            17071 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xb7]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17077;
                }
            }
            17077 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 17079;
            }
            17079 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<6>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<5>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::sdiv(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0x86]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17107 => {
                jump = 17108;
            }
            17108 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17116 => {
                jump = 17117;
            }
            17117 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x60]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17149 => {
                jump = 17150;
            }
            17150 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x01, 0x00]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                bitwise::lt(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0x24]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17182;
                }
            }
            17182 => {
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0x42]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17187 => {
                jump = 17188;
            }
            17188 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x1f]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::div(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0x42]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x44, 0x01]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17217 => {
                jump = 17218;
            }
            17218 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17220 => {
                jump = 17221;
            }
            17221 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0x42]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x44, 0x16]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17253 => {
                jump = 17254;
            }
            17254 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::pop(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_mul(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0x42]);
                check_instruction_result!(interpreter);
                stack::swap::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x44, 0x75]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17286 => {
                jump = 17287;
            }
            17287 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xa0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0xa1]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17312 => {
                jump = 17313;
            }
            17313 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0xae]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17325 => {
                jump = 17326;
            }
            17326 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0xbb]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17338 => {
                jump = 17339;
            }
            17339 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17350 => {
                jump = 17351;
            }
            17351 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mload(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xe0]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x40]);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0xda]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17369 => {
                jump = 17370;
            }
            17370 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0xe7]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17382 => {
                jump = 17383;
            }
            17383 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0xf4]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17395 => {
                jump = 17396;
            }
            17396 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                memory::mstore(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x20]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x43, 0xa1]);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x42, 0xdd]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17408 => {
                jump = 17409;
            }
            17409 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 17410;
            }
            17410 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x0f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17418;
                }
            }
            17418 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x44, 0x02]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17429 => {
                jump = 17430;
            }
            17430 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 17431;
            }
            17431 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x0f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17439;
                }
            }
            17439 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x44, 0x17]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17524 => {
                jump = 17525;
            }
            17525 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                jump = 17526;
            }
            17526 => {
                control::jumpdest(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::gt(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::iszero(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x3c, 0x0f]);
                check_instruction_result!(interpreter);
                let jump_result = control::jumpi_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
                if jump == 0 {
                    jump = 17534;
                }
            }
            17534 => {
                stack::push_slice::<1>(interpreter, host, &[0x00]);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x01]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x02]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x03]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x04]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x05]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x06]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x07]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x08]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x09]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0a]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0b]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0c]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0d]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0e]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x0f]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x10]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x11]);
                check_instruction_result!(interpreter);
                stack::dup::<3>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x12]);
                check_instruction_result!(interpreter);
                stack::dup::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::dup::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sload::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0xff]);
                check_instruction_result!(interpreter);
                bitwise::not(interpreter, host);
                check_instruction_result!(interpreter);
                bitwise::bitand(interpreter, host);
                check_instruction_result!(interpreter);
                stack::swap::<1>(interpreter, host);
                check_instruction_result!(interpreter);
                host::sstore::<SPEC>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<1>(interpreter, host, &[0x13]);
                check_instruction_result!(interpreter);
                arithmetic::wrapped_add(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<2>(interpreter, host, &[0x44, 0x76]);
                check_instruction_result!(interpreter);
                let jump_result = control::jump_without_pc(interpreter, host);
                check_instruction_result!(interpreter);
                jump = jump_result.unwrap();
            }
            17675 => {
                control::invalid(interpreter, host);
                check_instruction_result!(interpreter);
                host::log::<2>(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<5>(interpreter, host, &[0x69, 0x70, 0x66, 0x73, 0x58]);
                check_instruction_result!(interpreter);
                bitwise::slt(interpreter, host);
                check_instruction_result!(interpreter);
                system::keccak256(interpreter, host);
                check_instruction_result!(interpreter);
                arithmetic::wrapping_sub(interpreter, host);
                check_instruction_result!(interpreter);
                stack::push_slice::<17>(interpreter, host, &[0x24, 0xf5, 0x64, 0x78, 0x53, 0x87, 0x9c, 0x58, 0xfb, 0xcc, 0x61, 0xac, 0x36, 0x16, 0x45, 0x5f, 0x6f]);
                check_instruction_result!(interpreter);
                stack::push_slice::<20>(interpreter, host, &[0x1c, 0xc6, 0xe8, 0x4f, 0x91, 0xeb, 0x5a, 0x3b, 0x4e, 0x06, 0xc0, 0x04, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00, 0x07]);
                check_instruction_result!(interpreter);
                arithmetic::rem(interpreter, host);
                check_instruction_result!(interpreter);
                control::stop(interpreter, host);
                check_instruction_result!(interpreter);
                return;
                system::caller(interpreter, host);
                check_instruction_result!(interpreter);
            }
            _ => panic!("Invalid jump destination"),
        }
    }
}